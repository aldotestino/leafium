{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gatewayId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gatewayName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "long",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "altitude",
          "type": "uint256"
        }
      ],
      "name": "addGateway",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGateways",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "long",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "altitude",
              "type": "uint256"
            }
          ],
          "internalType": "struct Leafium.Gateway[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyGateways",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "long",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "altitude",
              "type": "uint256"
            }
          ],
          "internalType": "struct Leafium.Gateway[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9a87aab61a23746a2f573ab133e55bbf7e6c804fcf3afd3331f3ce308b36d1d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2076920",
    "logsBloom": "0x
    "blockHash": "0x5f0de58c6dcfa93aec3a0f2e7f2018dc3b5b794e9dd7afe1bbb75bf0d3628f1d",
    "transactionHash": "0xb9a87aab61a23746a2f573ab133e55bbf7e6c804fcf3afd3331f3ce308b36d1d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xb9a87aab61a23746a2f573ab133e55bbf7e6c804fcf3afd3331f3ce308b36d1d",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3"
        ],
        "data": "0x00000000000000000000000000000000000000000000021e19e0c9bab2400000",
        "logIndex": 0,
        "blockHash": "0x5f0de58c6dcfa93aec3a0f2e7f2018dc3b5b794e9dd7afe1bbb75bf0d3628f1d"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "2076920",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "79c028c10fffdfd59966caf942d52d87",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gatewayId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gatewayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"}],\"name\":\"addGateway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGateways\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"}],\"internalType\":\"struct Leafium.Gateway[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyGateways\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"}],\"internalType\":\"struct Leafium.Gateway[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Leafium.sol\":\"Leafium\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Leafium.sol\":{\"content\":\"pragma solidity ^0.8.9;\\r\\n\\r\\n//ERC Token Standard #20 Interface\\r\\nimport \\\"./LeafiumToken.sol\\\";\\r\\n\\r\\ncontract Leafium is LeafiumToken{\\r\\n\\r\\n    struct Gateway {\\r\\n        string id;\\r\\n        string name;\\r\\n        string lat;\\r\\n        string long;\\r\\n        uint256 altitude;\\r\\n    }\\r\\n\\r\\n    mapping(address => Gateway[]) private userToGateways;\\r\\n    Gateway[] private gateways;\\r\\n\\r\\n    constructor() public LeafiumToken() {\\r\\n    }\\r\\n\\r\\n    function addGateway(\\r\\n        string memory gatewayId,\\r\\n        string memory gatewayName,\\r\\n        string memory lat,\\r\\n        string memory long,\\r\\n        uint256 altitude\\r\\n    ) public {\\r\\n        Gateway memory newGateway = Gateway(\\r\\n            gatewayId,\\r\\n            gatewayName,\\r\\n            lat,\\r\\n            long,\\r\\n            altitude\\r\\n        );\\r\\n        gateways.push(newGateway);\\r\\n        userToGateways[msg.sender].push(newGateway);\\r\\n        LeafiumToken.transferToken(msg.sender);\\r\\n\\r\\n    }\\r\\n\\r\\n    function getMyGateways() public view returns (Gateway[] memory) {\\r\\n        return userToGateways[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getGateways() public view returns (Gateway[] memory){\\r\\n        return gateways;\\r\\n    }\\r\\n\\r\\n    function getBalance(address account) public view returns (uint256){\\r\\n        require(msg.sender == account || msg.sender == LeafiumToken.owner, 'not authorized');\\r\\n        return LeafiumToken.getBalanceToken(account);\\r\\n    }\\r\\n   \\r\\n}\\r\\n\",\"keccak256\":\"0x1c98cd776abbd7f7837c08ab85d9eef6deb04af157a46c6c5a28ba35db765d5c\"},\"contracts/LeafiumToken.sol\":{\"content\":\"pragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract LeafiumToken is ERC20{\\r\\n\\r\\n    address internal owner;\\r\\n    uint256 private totalToken = 10000 * (10 ** 18);\\r\\n    uint256 private reward = 50 * (10 ** 18);\\r\\n\\r\\n    constructor() public ERC20(\\\"Leafium\\\", \\\"LFM\\\") {\\r\\n        _mint(address(this), totalToken); //or msg.sender as owner\\r\\n        // owner = msg.sender;\\r\\n        owner = address(this);\\r\\n    }\\r\\n\\r\\n    function transferToken(address to) internal {\\r\\n        super._transfer(owner, to, reward);\\r\\n    }\\r\\n\\r\\n    function getBalanceToken(address account) internal view returns (uint256){\\r\\n        require(msg.sender == account ||msg.sender == owner, 'not authorized');\\r\\n        return super.balanceOf(account);\\r\\n    }\\r\\n   \\r\\n}\",\"keccak256\":\"0x077bf2fc70f5b5b4ca6feec7d590e6efaf02af2847e74f490a1bcb8b95800b0a\"}},\"version\":1}",
  "bytecode": "0x608060405269021e19e0c9bab24000006006556802b5e3af16b18800006007553480156200002c57600080fd5b506040518060400160405280600781526020017f4c65616669756d000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c464d00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000b1929190620002a0565b508060049080519060200190620000ca929190620002a0565b505050620000e1306006546200012860201b60201c565b30600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004fc565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200019b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019290620003b1565b60405180910390fd5b620001af600083836200029660201b60201c565b8060026000828254620001c391906200040c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200027691906200047a565b60405180910390a362000292600083836200029b60201b60201c565b5050565b505050565b505050565b828054620002ae90620004c6565b90600052602060002090601f016020900481019282620002d257600085556200031e565b82601f10620002ed57805160ff19168380011785556200031e565b828001600101855582156200031e579182015b828111156200031d57825182559160200191906001019062000300565b5b5090506200032d919062000331565b5090565b5b808211156200034c57600081600090555060010162000332565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000399601f8362000350565b9150620003a68262000361565b602082019050919050565b60006020820190508181036000830152620003cc816200038a565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200041982620003d3565b91506200042683620003d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200045e576200045d620003dd565b5b828201905092915050565b6200047481620003d3565b82525050565b600060208201905062000491600083018462000469565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004df57607f821691505b60208210811415620004f657620004f562000497565b5b50919050565b61218b806200050c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063741bf4a311610097578063a9059cbb11610066578063a9059cbb1461029c578063d82778ce146102cc578063dd62ed3e146102ea578063f8b2cb4f1461031a576100f5565b8063741bf4a314610214578063877d84b91461023257806395d89b411461024e578063a457c2d71461026c576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b61010261034a565b60405161010f91906115e2565b60405180910390f35b610132600480360381019061012d91906116ac565b6103dc565b60405161013f9190611707565b60405180910390f35b6101506103ff565b60405161015d9190611731565b60405180910390f35b610180600480360381019061017b919061174c565b610409565b60405161018d9190611707565b60405180910390f35b61019e610438565b6040516101ab91906117bb565b60405180910390f35b6101ce60048036038101906101c991906116ac565b610441565b6040516101db9190611707565b60405180910390f35b6101fe60048036038101906101f991906117d6565b610478565b60405161020b9190611731565b60405180910390f35b61021c6104c0565b60405161022991906119a9565b60405180910390f35b61024c60048036038101906102479190611b00565b6107ae565b005b61025661097f565b60405161026391906115e2565b60405180910390f35b610286600480360381019061028191906116ac565b610a11565b6040516102939190611707565b60405180910390f35b6102b660048036038101906102b191906116ac565b610a88565b6040516102c39190611707565b60405180910390f35b6102d4610aab565b6040516102e191906119a9565b60405180910390f35b61030460048036038101906102ff9190611beb565b610d5c565b6040516103119190611731565b60405180910390f35b610334600480360381019061032f91906117d6565b610de3565b6040516103419190611731565b60405180910390f35b60606003805461035990611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461038590611c5a565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050905090565b6000806103e7610ebb565b90506103f4818585610ec3565b600191505092915050565b6000600254905090565b600080610414610ebb565b905061042185828561108e565b61042c85858561111a565b60019150509392505050565b60006012905090565b60008061044c610ebb565b905061046d81858561045e8589610d5c565b6104689190611cbb565b610ec3565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107a557838290600052602060002090600502016040518060a001604052908160008201805461055490611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611c5a565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b505050505081526020016001820180546105e690611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461061290611c5a565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050815260200160028201805461067890611c5a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a490611c5a565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050505050815260200160038201805461070a90611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461073690611c5a565b80156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b5050505050815260200160048201548152505081526020019060010190610521565b50505050905090565b60006040518060a00160405280878152602001868152602001858152602001848152602001838152509050600981908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190805190602001906108219291906114a6565b50602082015181600101908051906020019061083e9291906114a6565b50604082015181600201908051906020019061085b9291906114a6565b5060608201518160030190805190602001906108789291906114a6565b50608082015181600401555050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908051906020019061090a9291906114a6565b5060208201518160010190805190602001906109279291906114a6565b5060408201518160020190805190602001906109449291906114a6565b5060608201518160030190805190602001906109619291906114a6565b5060808201518160040155505061097733611392565b505050505050565b60606004805461098e90611c5a565b80601f01602080910402602001604051908101604052809291908181526020018280546109ba90611c5a565b8015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b5050505050905090565b600080610a1c610ebb565b90506000610a2a8286610d5c565b905083811015610a6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6690611d83565b60405180910390fd5b610a7c8286868403610ec3565b60019250505092915050565b600080610a93610ebb565b9050610aa081858561111a565b600191505092915050565b60606009805480602002602001604051908101604052809291908181526020016000905b82821015610d5357838290600052602060002090600502016040518060a0016040529081600082018054610b0290611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2e90611c5a565b8015610b7b5780601f10610b5057610100808354040283529160200191610b7b565b820191906000526020600020905b815481529060010190602001808311610b5e57829003601f168201915b50505050508152602001600182018054610b9490611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc090611c5a565b8015610c0d5780601f10610be257610100808354040283529160200191610c0d565b820191906000526020600020905b815481529060010190602001808311610bf057829003601f168201915b50505050508152602001600282018054610c2690611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5290611c5a565b8015610c9f5780601f10610c7457610100808354040283529160200191610c9f565b820191906000526020600020905b815481529060010190602001808311610c8257829003601f168201915b50505050508152602001600382018054610cb890611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce490611c5a565b8015610d315780601f10610d0657610100808354040283529160200191610d31565b820191906000526020600020905b815481529060010190602001808311610d1457829003601f168201915b5050505050815260200160048201548152505081526020019060010190610acf565b50505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6c5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290611def565b60405180910390fd5b610eb4826113c4565b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a90611e81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a90611f13565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110819190611731565b60405180910390a3505050565b600061109a8484610d5c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111145781811015611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fd90611f7f565b60405180910390fd5b6111138484848403610ec3565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561118a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118190612011565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f1906120a3565b60405180910390fd5b61120583838361149c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561128b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128290612135565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113799190611731565b60405180910390a361138c8484846114a1565b50505050565b6113c1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260075461111a565b50565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061144d5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390611def565b60405180910390fd5b61149582610478565b9050919050565b505050565b505050565b8280546114b290611c5a565b90600052602060002090601f0160209004810192826114d4576000855561151b565b82601f106114ed57805160ff191683800117855561151b565b8280016001018555821561151b579182015b8281111561151a5782518255916020019190600101906114ff565b5b509050611528919061152c565b5090565b5b8082111561154557600081600090555060010161152d565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611583578082015181840152602081019050611568565b83811115611592576000848401525b50505050565b6000601f19601f8301169050919050565b60006115b482611549565b6115be8185611554565b93506115ce818560208601611565565b6115d781611598565b840191505092915050565b600060208201905081810360008301526115fc81846115a9565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061164382611618565b9050919050565b61165381611638565b811461165e57600080fd5b50565b6000813590506116708161164a565b92915050565b6000819050919050565b61168981611676565b811461169457600080fd5b50565b6000813590506116a681611680565b92915050565b600080604083850312156116c3576116c261160e565b5b60006116d185828601611661565b92505060206116e285828601611697565b9150509250929050565b60008115159050919050565b611701816116ec565b82525050565b600060208201905061171c60008301846116f8565b92915050565b61172b81611676565b82525050565b60006020820190506117466000830184611722565b92915050565b6000806000606084860312156117655761176461160e565b5b600061177386828701611661565b935050602061178486828701611661565b925050604061179586828701611697565b9150509250925092565b600060ff82169050919050565b6117b58161179f565b82525050565b60006020820190506117d060008301846117ac565b92915050565b6000602082840312156117ec576117eb61160e565b5b60006117fa84828501611661565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061184b82611549565b611855818561182f565b9350611865818560208601611565565b61186e81611598565b840191505092915050565b61188281611676565b82525050565b600060a08301600083015184820360008601526118a58282611840565b915050602083015184820360208601526118bf8282611840565b915050604083015184820360408601526118d98282611840565b915050606083015184820360608601526118f38282611840565b91505060808301516119086080860182611879565b508091505092915050565b600061191f8383611888565b905092915050565b6000602082019050919050565b600061193f82611803565b611949818561180e565b93508360208202850161195b8561181f565b8060005b8581101561199757848403895281516119788582611913565b945061198383611927565b925060208a0199505060018101905061195f565b50829750879550505050505092915050565b600060208201905081810360008301526119c38184611934565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a0d82611598565b810181811067ffffffffffffffff82111715611a2c57611a2b6119d5565b5b80604052505050565b6000611a3f611604565b9050611a4b8282611a04565b919050565b600067ffffffffffffffff821115611a6b57611a6a6119d5565b5b611a7482611598565b9050602081019050919050565b82818337600083830152505050565b6000611aa3611a9e84611a50565b611a35565b905082815260208101848484011115611abf57611abe6119d0565b5b611aca848285611a81565b509392505050565b600082601f830112611ae757611ae66119cb565b5b8135611af7848260208601611a90565b91505092915050565b600080600080600060a08688031215611b1c57611b1b61160e565b5b600086013567ffffffffffffffff811115611b3a57611b39611613565b5b611b4688828901611ad2565b955050602086013567ffffffffffffffff811115611b6757611b66611613565b5b611b7388828901611ad2565b945050604086013567ffffffffffffffff811115611b9457611b93611613565b5b611ba088828901611ad2565b935050606086013567ffffffffffffffff811115611bc157611bc0611613565b5b611bcd88828901611ad2565b9250506080611bde88828901611697565b9150509295509295909350565b60008060408385031215611c0257611c0161160e565b5b6000611c1085828601611661565b9250506020611c2185828601611661565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7257607f821691505b60208210811415611c8657611c85611c2b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cc682611676565b9150611cd183611676565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0657611d05611c8c565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611d6d602583611554565b9150611d7882611d11565b604082019050919050565b60006020820190508181036000830152611d9c81611d60565b9050919050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611dd9600e83611554565b9150611de482611da3565b602082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611e6b602483611554565b9150611e7682611e0f565b604082019050919050565b60006020820190508181036000830152611e9a81611e5e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611efd602283611554565b9150611f0882611ea1565b604082019050919050565b60006020820190508181036000830152611f2c81611ef0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611f69601d83611554565b9150611f7482611f33565b602082019050919050565b60006020820190508181036000830152611f9881611f5c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611ffb602583611554565b915061200682611f9f565b604082019050919050565b6000602082019050818103600083015261202a81611fee565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061208d602383611554565b915061209882612031565b604082019050919050565b600060208201905081810360008301526120bc81612080565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061211f602683611554565b915061212a826120c3565b604082019050919050565b6000602082019050818103600083015261214e81612112565b905091905056fea26469706673582212204e20e2fa7589c37c3315ada1588d4bc3d5111ff47a2c6367f9ed43806c30760e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063741bf4a311610097578063a9059cbb11610066578063a9059cbb1461029c578063d82778ce146102cc578063dd62ed3e146102ea578063f8b2cb4f1461031a576100f5565b8063741bf4a314610214578063877d84b91461023257806395d89b411461024e578063a457c2d71461026c576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b61010261034a565b60405161010f91906115e2565b60405180910390f35b610132600480360381019061012d91906116ac565b6103dc565b60405161013f9190611707565b60405180910390f35b6101506103ff565b60405161015d9190611731565b60405180910390f35b610180600480360381019061017b919061174c565b610409565b60405161018d9190611707565b60405180910390f35b61019e610438565b6040516101ab91906117bb565b60405180910390f35b6101ce60048036038101906101c991906116ac565b610441565b6040516101db9190611707565b60405180910390f35b6101fe60048036038101906101f991906117d6565b610478565b60405161020b9190611731565b60405180910390f35b61021c6104c0565b60405161022991906119a9565b60405180910390f35b61024c60048036038101906102479190611b00565b6107ae565b005b61025661097f565b60405161026391906115e2565b60405180910390f35b610286600480360381019061028191906116ac565b610a11565b6040516102939190611707565b60405180910390f35b6102b660048036038101906102b191906116ac565b610a88565b6040516102c39190611707565b60405180910390f35b6102d4610aab565b6040516102e191906119a9565b60405180910390f35b61030460048036038101906102ff9190611beb565b610d5c565b6040516103119190611731565b60405180910390f35b610334600480360381019061032f91906117d6565b610de3565b6040516103419190611731565b60405180910390f35b60606003805461035990611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461038590611c5a565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050905090565b6000806103e7610ebb565b90506103f4818585610ec3565b600191505092915050565b6000600254905090565b600080610414610ebb565b905061042185828561108e565b61042c85858561111a565b60019150509392505050565b60006012905090565b60008061044c610ebb565b905061046d81858561045e8589610d5c565b6104689190611cbb565b610ec3565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156107a557838290600052602060002090600502016040518060a001604052908160008201805461055490611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611c5a565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b505050505081526020016001820180546105e690611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461061290611c5a565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050815260200160028201805461067890611c5a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a490611c5a565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050505050815260200160038201805461070a90611c5a565b80601f016020809104026020016040519081016040528092919081815260200182805461073690611c5a565b80156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b5050505050815260200160048201548152505081526020019060010190610521565b50505050905090565b60006040518060a00160405280878152602001868152602001858152602001848152602001838152509050600981908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000190805190602001906108219291906114a6565b50602082015181600101908051906020019061083e9291906114a6565b50604082015181600201908051906020019061085b9291906114a6565b5060608201518160030190805190602001906108789291906114a6565b50608082015181600401555050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908051906020019061090a9291906114a6565b5060208201518160010190805190602001906109279291906114a6565b5060408201518160020190805190602001906109449291906114a6565b5060608201518160030190805190602001906109619291906114a6565b5060808201518160040155505061097733611392565b505050505050565b60606004805461098e90611c5a565b80601f01602080910402602001604051908101604052809291908181526020018280546109ba90611c5a565b8015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b5050505050905090565b600080610a1c610ebb565b90506000610a2a8286610d5c565b905083811015610a6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6690611d83565b60405180910390fd5b610a7c8286868403610ec3565b60019250505092915050565b600080610a93610ebb565b9050610aa081858561111a565b600191505092915050565b60606009805480602002602001604051908101604052809291908181526020016000905b82821015610d5357838290600052602060002090600502016040518060a0016040529081600082018054610b0290611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2e90611c5a565b8015610b7b5780601f10610b5057610100808354040283529160200191610b7b565b820191906000526020600020905b815481529060010190602001808311610b5e57829003601f168201915b50505050508152602001600182018054610b9490611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc090611c5a565b8015610c0d5780601f10610be257610100808354040283529160200191610c0d565b820191906000526020600020905b815481529060010190602001808311610bf057829003601f168201915b50505050508152602001600282018054610c2690611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5290611c5a565b8015610c9f5780601f10610c7457610100808354040283529160200191610c9f565b820191906000526020600020905b815481529060010190602001808311610c8257829003601f168201915b50505050508152602001600382018054610cb890611c5a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce490611c5a565b8015610d315780601f10610d0657610100808354040283529160200191610d31565b820191906000526020600020905b815481529060010190602001808311610d1457829003601f168201915b5050505050815260200160048201548152505081526020019060010190610acf565b50505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e6c5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290611def565b60405180910390fd5b610eb4826113c4565b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a90611e81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a90611f13565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110819190611731565b60405180910390a3505050565b600061109a8484610d5c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111145781811015611106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fd90611f7f565b60405180910390fd5b6111138484848403610ec3565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561118a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118190612011565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f1906120a3565b60405180910390fd5b61120583838361149c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561128b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128290612135565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113799190611731565b60405180910390a361138c8484846114a1565b50505050565b6113c1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260075461111a565b50565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061144d5750600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390611def565b60405180910390fd5b61149582610478565b9050919050565b505050565b505050565b8280546114b290611c5a565b90600052602060002090601f0160209004810192826114d4576000855561151b565b82601f106114ed57805160ff191683800117855561151b565b8280016001018555821561151b579182015b8281111561151a5782518255916020019190600101906114ff565b5b509050611528919061152c565b5090565b5b8082111561154557600081600090555060010161152d565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015611583578082015181840152602081019050611568565b83811115611592576000848401525b50505050565b6000601f19601f8301169050919050565b60006115b482611549565b6115be8185611554565b93506115ce818560208601611565565b6115d781611598565b840191505092915050565b600060208201905081810360008301526115fc81846115a9565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061164382611618565b9050919050565b61165381611638565b811461165e57600080fd5b50565b6000813590506116708161164a565b92915050565b6000819050919050565b61168981611676565b811461169457600080fd5b50565b6000813590506116a681611680565b92915050565b600080604083850312156116c3576116c261160e565b5b60006116d185828601611661565b92505060206116e285828601611697565b9150509250929050565b60008115159050919050565b611701816116ec565b82525050565b600060208201905061171c60008301846116f8565b92915050565b61172b81611676565b82525050565b60006020820190506117466000830184611722565b92915050565b6000806000606084860312156117655761176461160e565b5b600061177386828701611661565b935050602061178486828701611661565b925050604061179586828701611697565b9150509250925092565b600060ff82169050919050565b6117b58161179f565b82525050565b60006020820190506117d060008301846117ac565b92915050565b6000602082840312156117ec576117eb61160e565b5b60006117fa84828501611661565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061184b82611549565b611855818561182f565b9350611865818560208601611565565b61186e81611598565b840191505092915050565b61188281611676565b82525050565b600060a08301600083015184820360008601526118a58282611840565b915050602083015184820360208601526118bf8282611840565b915050604083015184820360408601526118d98282611840565b915050606083015184820360608601526118f38282611840565b91505060808301516119086080860182611879565b508091505092915050565b600061191f8383611888565b905092915050565b6000602082019050919050565b600061193f82611803565b611949818561180e565b93508360208202850161195b8561181f565b8060005b8581101561199757848403895281516119788582611913565b945061198383611927565b925060208a0199505060018101905061195f565b50829750879550505050505092915050565b600060208201905081810360008301526119c38184611934565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a0d82611598565b810181811067ffffffffffffffff82111715611a2c57611a2b6119d5565b5b80604052505050565b6000611a3f611604565b9050611a4b8282611a04565b919050565b600067ffffffffffffffff821115611a6b57611a6a6119d5565b5b611a7482611598565b9050602081019050919050565b82818337600083830152505050565b6000611aa3611a9e84611a50565b611a35565b905082815260208101848484011115611abf57611abe6119d0565b5b611aca848285611a81565b509392505050565b600082601f830112611ae757611ae66119cb565b5b8135611af7848260208601611a90565b91505092915050565b600080600080600060a08688031215611b1c57611b1b61160e565b5b600086013567ffffffffffffffff811115611b3a57611b39611613565b5b611b4688828901611ad2565b955050602086013567ffffffffffffffff811115611b6757611b66611613565b5b611b7388828901611ad2565b945050604086013567ffffffffffffffff811115611b9457611b93611613565b5b611ba088828901611ad2565b935050606086013567ffffffffffffffff811115611bc157611bc0611613565b5b611bcd88828901611ad2565b9250506080611bde88828901611697565b9150509295509295909350565b60008060408385031215611c0257611c0161160e565b5b6000611c1085828601611661565b9250506020611c2185828601611661565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7257607f821691505b60208210811415611c8657611c85611c2b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cc682611676565b9150611cd183611676565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d0657611d05611c8c565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611d6d602583611554565b9150611d7882611d11565b604082019050919050565b60006020820190508181036000830152611d9c81611d60565b9050919050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611dd9600e83611554565b9150611de482611da3565b602082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611e6b602483611554565b9150611e7682611e0f565b604082019050919050565b60006020820190508181036000830152611e9a81611e5e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611efd602283611554565b9150611f0882611ea1565b604082019050919050565b60006020820190508181036000830152611f2c81611ef0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611f69601d83611554565b9150611f7482611f33565b602082019050919050565b60006020820190508181036000830152611f9881611f5c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611ffb602583611554565b915061200682611f9f565b604082019050919050565b6000602082019050818103600083015261202a81611fee565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061208d602383611554565b915061209882612031565b604082019050919050565b600060208201905081810360008301526120bc81612080565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061211f602683611554565b915061212a826120c3565b604082019050919050565b6000602082019050818103600083015261214e81612112565b905091905056fea26469706673582212204e20e2fa7589c37c3315ada1588d4bc3d5111ff47a2c6367f9ed43806c30760e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 23,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 847,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 855,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "totalToken",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 863,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "reward",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 733,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "userToGateways",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(Gateway)727_storage)dyn_storage)"
      },
      {
        "astId": 737,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "gateways",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_struct(Gateway)727_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Gateway)727_storage)dyn_storage": {
        "base": "t_struct(Gateway)727_storage",
        "encoding": "dynamic_array",
        "label": "struct Leafium.Gateway[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(Gateway)727_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Leafium.Gateway[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Gateway)727_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Gateway)727_storage": {
        "encoding": "inplace",
        "label": "struct Leafium.Gateway",
        "members": [
          {
            "astId": 718,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 720,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 722,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "lat",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 724,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "long",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 726,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "altitude",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}