{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gatewayId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gatewayName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lat",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "long",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "altitude",
          "type": "uint256"
        }
      ],
      "name": "addGateway",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gatewayId",
          "type": "string"
        }
      ],
      "name": "awake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGateways",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "long",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "altitude",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "earnings",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Leafium.Gateway[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyGateways",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "id",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lat",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "long",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "altitude",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "earnings",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Leafium.Gateway[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb25c3191cfb7717f645b3c3493e1ae639fceb742ec049fd3ea943a324e5bcfc4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1473597",
    "logsBloom": "0x
    "blockHash": "0x7dc17dae68b187ba7d475f42d4ae51745c066a70af3fd54e83407bde6cce3ad8",
    "transactionHash": "0xb25c3191cfb7717f645b3c3493e1ae639fceb742ec049fd3ea943a324e5bcfc4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1473597",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e2d21943c572e8e73d55f9712b8334b2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gatewayId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gatewayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"}],\"name\":\"addGateway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gatewayId\",\"type\":\"string\"}],\"name\":\"awake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGateways\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earnings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Leafium.Gateway[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyGateways\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lat\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"long\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"altitude\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earnings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Leafium.Gateway[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Leafium.sol\":\"Leafium\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Leafium.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./LeafiumToken.sol\\\";\\n\\ncontract Leafium {\\n    struct Gateway {\\n        string id;\\n        string name;\\n        string lat;\\n        string long;\\n        uint256 altitude;\\n        uint256 earnings;\\n        uint256 updatedAt;\\n    }\\n\\n    LeafiumToken token;\\n\\n    mapping(address => Gateway[]) private userToGateways;\\n    mapping(string => bool) private gatewayExists;\\n    Gateway[] private gateways;\\n    uint256 reward = 50 * (10 ** 18);\\n    uint256 awakeReward = 1 * (10 ** 18);\\n\\n    constructor(address tokenAddress) {\\n        token = LeafiumToken(tokenAddress);\\n    }\\n\\n    function addGateway(\\n        string memory gatewayId,\\n        string memory gatewayName,\\n        string memory lat,\\n        string memory long,\\n        uint256 altitude\\n    ) public {\\n        require(\\n            gatewayExists[gatewayId] == false,\\n            \\\"Gateway already registered!\\\"\\n        );\\n        Gateway memory newGateway = Gateway(\\n            gatewayId,\\n            gatewayName,\\n            lat,\\n            long,\\n            altitude,\\n            50,\\n            0\\n        );\\n        gateways.push(newGateway);\\n        gatewayExists[gatewayId] = true;\\n        userToGateways[msg.sender].push(newGateway);\\n        token.rewardTo(msg.sender, reward);\\n    }\\n\\n    function getMyGateways() public view returns (Gateway[] memory) {\\n        return userToGateways[msg.sender];\\n    }\\n\\n    function getGateways() public view returns (Gateway[] memory) {\\n        return gateways;\\n    }\\n\\n    function getBalance() public view returns (uint256) {\\n        return token.balanceOf(msg.sender);\\n    }\\n\\n    function awake(string memory gatewayId) public {\\n        bool isOfUser = false;\\n        for (uint256 i = 0; i < userToGateways[msg.sender].length; i++) {\\n            if (\\n                keccak256(bytes(userToGateways[msg.sender][i].id)) ==\\n                keccak256(bytes(gatewayId))\\n            ) {\\n                isOfUser = true;\\n                uint256 updatedEarnings = userToGateways[msg.sender][i]\\n                    .earnings + 1;\\n                uint256 updatedAt = block.timestamp;\\n                userToGateways[msg.sender][i].earnings = updatedEarnings;\\n                userToGateways[msg.sender][i].updatedAt = updatedAt;\\n                for (uint256 j = 0; j < gateways.length; j++) {\\n                    if (\\n                        keccak256(bytes(gateways[j].id)) ==\\n                        keccak256(bytes(gatewayId))\\n                    ) {\\n                        gateways[j].earnings = updatedEarnings;\\n                        gateways[j].updatedAt = updatedAt;\\n                        break;\\n                    }\\n                }\\n                break;\\n            }\\n        }\\n        require(isOfUser, \\\"Gateway not found!\\\");\\n        token.rewardTo(msg.sender, awakeReward);\\n    }\\n}\\n\",\"keccak256\":\"0x99fc28d1a4fecbce44372afb85f1045ece573d12762a085957f267cc76e66bd0\",\"license\":\"MIT\"},\"contracts/LeafiumToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract LeafiumToken is ERC20 {\\n    constructor(uint256 initialSupply) ERC20(\\\"Leafium\\\", \\\"LFM\\\") {\\n        _mint(address(this), initialSupply);\\n    }\\n\\n    function rewardTo(address to, uint256 amount) public {\\n        super._transfer(address(this), to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x4e8460fb753423bc2cc18d68dca635f3c84d6718ce64c0b0edc73107fa1c3c1f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b1880000600455670de0b6b3a76400006005553480156200002a57600080fd5b50604051620019b8380380620019b8833981810160405281019062000050919062000101565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000133565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000c9826200009c565b9050919050565b620000db81620000bc565b8114620000e757600080fd5b50565b600081519050620000fb81620000d0565b92915050565b6000602082840312156200011a576200011962000097565b5b60006200012a84828501620000ea565b91505092915050565b61187580620001436000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806312065fe01461005c578063741bf4a31461007a578063877d84b914610098578063d19a653a146100b4578063d82778ce146100d0575b600080fd5b6100646100ee565b6040516100719190610f27565b60405180910390f35b61008261019f565b60405161008f919061115d565b60405180910390f35b6100b260048036038101906100ad91906112f4565b6104a1565b005b6100ce60048036038101906100c991906113df565b6107d7565b005b6100d8610ba6565b6040516100e5919061115d565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161014a9190611469565b60206040518083038186803b15801561016257600080fd5b505afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190611499565b905090565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561049857838290600052602060002090600702016040518060e0016040529081600082018054610233906114f5565b80601f016020809104026020016040519081016040528092919081815260200182805461025f906114f5565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081526020016001820180546102c5906114f5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f1906114f5565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b50505050508152602001600282018054610357906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610383906114f5565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b505050505081526020016003820180546103e9906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610415906114f5565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505081526020019060010190610200565b50505050905090565b600015156002866040516104b59190611563565b908152602001604051809103902060009054906101000a900460ff16151514610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a906115d7565b60405180910390fd5b60006040518060e00160405280878152602001868152602001858152602001848152602001838152602001603281526020016000815250905060038190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000019080519060200190610594929190610e6b565b5060208201518160010190805190602001906105b1929190610e6b565b5060408201518160020190805190602001906105ce929190610e6b565b5060608201518160030190805190602001906105eb929190610e6b565b506080820151816004015560a0820151816005015560c082015181600601555050600160028760405161061e9190611563565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000190805190602001906106c8929190610e6b565b5060208201518160010190805190602001906106e5929190610e6b565b506040820151816002019080519060200190610702929190610e6b565b50606082015181600301908051906020019061071f929190610e6b565b506080820151816004015560a0820151816005015560c08201518160060155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b71c64336004546040518363ffffffff1660e01b815260040161079d9291906115f7565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b50505050505050505050565b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610ad2578280519060200120600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061087e5761087d611620565b5b906000526020600020906007020160000160405161089c91906116ee565b60405180910390201415610abf5760019150600060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061090257610901611620565b5b90600052602060002090600702016005015461091e9190611734565b9050600042905081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061097757610976611620565b5b90600052602060002090600702016005018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106109de576109dd611620565b5b90600052602060002090600702016006018190555060005b600380549050811015610ab757858051906020012060038281548110610a1f57610a1e611620565b5b9060005260206000209060070201600001604051610a3d91906116ee565b60405180910390201415610aa4578260038281548110610a6057610a5f611620565b5b9060005260206000209060070201600501819055508160038281548110610a8a57610a89611620565b5b906000526020600020906007020160060181905550610ab7565b8080610aaf9061178a565b9150506109f6565b505050610ad2565b8080610aca9061178a565b9150506107db565b5080610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a9061181f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b71c64336005546040518363ffffffff1660e01b8152600401610b709291906115f7565b600060405180830381600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505050505050565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e6257838290600052602060002090600702016040518060e0016040529081600082018054610bfd906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c29906114f5565b8015610c765780601f10610c4b57610100808354040283529160200191610c76565b820191906000526020600020905b815481529060010190602001808311610c5957829003601f168201915b50505050508152602001600182018054610c8f906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbb906114f5565b8015610d085780601f10610cdd57610100808354040283529160200191610d08565b820191906000526020600020905b815481529060010190602001808311610ceb57829003601f168201915b50505050508152602001600282018054610d21906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4d906114f5565b8015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b50505050508152602001600382018054610db3906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddf906114f5565b8015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505081526020019060010190610bca565b50505050905090565b828054610e77906114f5565b90600052602060002090601f016020900481019282610e995760008555610ee0565b82601f10610eb257805160ff1916838001178555610ee0565b82800160010185558215610ee0579182015b82811115610edf578251825591602001919060010190610ec4565b5b509050610eed9190610ef1565b5090565b5b80821115610f0a576000816000905550600101610ef2565b5090565b6000819050919050565b610f2181610f0e565b82525050565b6000602082019050610f3c6000830184610f18565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fa8578082015181840152602081019050610f8d565b83811115610fb7576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fd982610f6e565b610fe38185610f79565b9350610ff3818560208601610f8a565b610ffc81610fbd565b840191505092915050565b61101081610f0e565b82525050565b600060e08301600083015184820360008601526110338282610fce565b9150506020830151848203602086015261104d8282610fce565b915050604083015184820360408601526110678282610fce565b915050606083015184820360608601526110818282610fce565b91505060808301516110966080860182611007565b5060a08301516110a960a0860182611007565b5060c08301516110bc60c0860182611007565b508091505092915050565b60006110d38383611016565b905092915050565b6000602082019050919050565b60006110f382610f42565b6110fd8185610f4d565b93508360208202850161110f85610f5e565b8060005b8581101561114b578484038952815161112c85826110c7565b9450611137836110db565b925060208a01995050600181019050611113565b50829750879550505050505092915050565b6000602082019050818103600083015261117781846110e8565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111d582610fbd565b810181811067ffffffffffffffff821117156111f4576111f361119d565b5b80604052505050565b600061120761117f565b905061121382826111cc565b919050565b600067ffffffffffffffff8211156112335761123261119d565b5b61123c82610fbd565b9050602081019050919050565b82818337600083830152505050565b600061126b61126684611218565b6111fd565b90508281526020810184848401111561128757611286611198565b5b611292848285611249565b509392505050565b600082601f8301126112af576112ae611193565b5b81356112bf848260208601611258565b91505092915050565b6112d181610f0e565b81146112dc57600080fd5b50565b6000813590506112ee816112c8565b92915050565b600080600080600060a086880312156113105761130f611189565b5b600086013567ffffffffffffffff81111561132e5761132d61118e565b5b61133a8882890161129a565b955050602086013567ffffffffffffffff81111561135b5761135a61118e565b5b6113678882890161129a565b945050604086013567ffffffffffffffff8111156113885761138761118e565b5b6113948882890161129a565b935050606086013567ffffffffffffffff8111156113b5576113b461118e565b5b6113c18882890161129a565b92505060806113d2888289016112df565b9150509295509295909350565b6000602082840312156113f5576113f4611189565b5b600082013567ffffffffffffffff8111156114135761141261118e565b5b61141f8482850161129a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061145382611428565b9050919050565b61146381611448565b82525050565b600060208201905061147e600083018461145a565b92915050565b600081519050611493816112c8565b92915050565b6000602082840312156114af576114ae611189565b5b60006114bd84828501611484565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061150d57607f821691505b60208210811415611521576115206114c6565b5b50919050565b600081905092915050565b600061153d82610f6e565b6115478185611527565b9350611557818560208601610f8a565b80840191505092915050565b600061156f8284611532565b915081905092915050565b600082825260208201905092915050565b7f4761746577617920616c72656164792072656769737465726564210000000000600082015250565b60006115c1601b8361157a565b91506115cc8261158b565b602082019050919050565b600060208201905081810360008301526115f0816115b4565b9050919050565b600060408201905061160c600083018561145a565b6116196020830184610f18565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b6000815461167c816114f5565b611686818661164f565b945060018216600081146116a157600181146116b2576116e5565b60ff198316865281860193506116e5565b6116bb8561165a565b60005b838110156116dd578154818901526001820191506020810190506116be565b838801955050505b50505092915050565b60006116fa828461166f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173f82610f0e565b915061174a83610f0e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561177f5761177e611705565b5b828201905092915050565b600061179582610f0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117c8576117c7611705565b5b600182019050919050565b7f47617465776179206e6f7420666f756e64210000000000000000000000000000600082015250565b600061180960128361157a565b9150611814826117d3565b602082019050919050565b60006020820190508181036000830152611838816117fc565b905091905056fea26469706673582212204be0ad55ca9fc03e7993424e4810a9f79798cb3593cc62b98060f0f75131d20164736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806312065fe01461005c578063741bf4a31461007a578063877d84b914610098578063d19a653a146100b4578063d82778ce146100d0575b600080fd5b6100646100ee565b6040516100719190610f27565b60405180910390f35b61008261019f565b60405161008f919061115d565b60405180910390f35b6100b260048036038101906100ad91906112f4565b6104a1565b005b6100ce60048036038101906100c991906113df565b6107d7565b005b6100d8610ba6565b6040516100e5919061115d565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161014a9190611469565b60206040518083038186803b15801561016257600080fd5b505afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a9190611499565b905090565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561049857838290600052602060002090600702016040518060e0016040529081600082018054610233906114f5565b80601f016020809104026020016040519081016040528092919081815260200182805461025f906114f5565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081526020016001820180546102c5906114f5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f1906114f5565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b50505050508152602001600282018054610357906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610383906114f5565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b505050505081526020016003820180546103e9906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610415906114f5565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505081526020019060010190610200565b50505050905090565b600015156002866040516104b59190611563565b908152602001604051809103902060009054906101000a900460ff16151514610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a906115d7565b60405180910390fd5b60006040518060e00160405280878152602001868152602001858152602001848152602001838152602001603281526020016000815250905060038190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000019080519060200190610594929190610e6b565b5060208201518160010190805190602001906105b1929190610e6b565b5060408201518160020190805190602001906105ce929190610e6b565b5060608201518160030190805190602001906105eb929190610e6b565b506080820151816004015560a0820151816005015560c082015181600601555050600160028760405161061e9190611563565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000190805190602001906106c8929190610e6b565b5060208201518160010190805190602001906106e5929190610e6b565b506040820151816002019080519060200190610702929190610e6b565b50606082015181600301908051906020019061071f929190610e6b565b506080820151816004015560a0820151816005015560c08201518160060155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b71c64336004546040518363ffffffff1660e01b815260040161079d9291906115f7565b600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b50505050505050505050565b6000805b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610ad2578280519060200120600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061087e5761087d611620565b5b906000526020600020906007020160000160405161089c91906116ee565b60405180910390201415610abf5760019150600060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061090257610901611620565b5b90600052602060002090600702016005015461091e9190611734565b9050600042905081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061097757610976611620565b5b90600052602060002090600702016005018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106109de576109dd611620565b5b90600052602060002090600702016006018190555060005b600380549050811015610ab757858051906020012060038281548110610a1f57610a1e611620565b5b9060005260206000209060070201600001604051610a3d91906116ee565b60405180910390201415610aa4578260038281548110610a6057610a5f611620565b5b9060005260206000209060070201600501819055508160038281548110610a8a57610a89611620565b5b906000526020600020906007020160060181905550610ab7565b8080610aaf9061178a565b9150506109f6565b505050610ad2565b8080610aca9061178a565b9150506107db565b5080610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a9061181f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b71c64336005546040518363ffffffff1660e01b8152600401610b709291906115f7565b600060405180830381600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505050505050565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610e6257838290600052602060002090600702016040518060e0016040529081600082018054610bfd906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c29906114f5565b8015610c765780601f10610c4b57610100808354040283529160200191610c76565b820191906000526020600020905b815481529060010190602001808311610c5957829003601f168201915b50505050508152602001600182018054610c8f906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbb906114f5565b8015610d085780601f10610cdd57610100808354040283529160200191610d08565b820191906000526020600020905b815481529060010190602001808311610ceb57829003601f168201915b50505050508152602001600282018054610d21906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4d906114f5565b8015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b50505050508152602001600382018054610db3906114f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddf906114f5565b8015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152505081526020019060010190610bca565b50505050905090565b828054610e77906114f5565b90600052602060002090601f016020900481019282610e995760008555610ee0565b82601f10610eb257805160ff1916838001178555610ee0565b82800160010185558215610ee0579182015b82811115610edf578251825591602001919060010190610ec4565b5b509050610eed9190610ef1565b5090565b5b80821115610f0a576000816000905550600101610ef2565b5090565b6000819050919050565b610f2181610f0e565b82525050565b6000602082019050610f3c6000830184610f18565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fa8578082015181840152602081019050610f8d565b83811115610fb7576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fd982610f6e565b610fe38185610f79565b9350610ff3818560208601610f8a565b610ffc81610fbd565b840191505092915050565b61101081610f0e565b82525050565b600060e08301600083015184820360008601526110338282610fce565b9150506020830151848203602086015261104d8282610fce565b915050604083015184820360408601526110678282610fce565b915050606083015184820360608601526110818282610fce565b91505060808301516110966080860182611007565b5060a08301516110a960a0860182611007565b5060c08301516110bc60c0860182611007565b508091505092915050565b60006110d38383611016565b905092915050565b6000602082019050919050565b60006110f382610f42565b6110fd8185610f4d565b93508360208202850161110f85610f5e565b8060005b8581101561114b578484038952815161112c85826110c7565b9450611137836110db565b925060208a01995050600181019050611113565b50829750879550505050505092915050565b6000602082019050818103600083015261117781846110e8565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111d582610fbd565b810181811067ffffffffffffffff821117156111f4576111f361119d565b5b80604052505050565b600061120761117f565b905061121382826111cc565b919050565b600067ffffffffffffffff8211156112335761123261119d565b5b61123c82610fbd565b9050602081019050919050565b82818337600083830152505050565b600061126b61126684611218565b6111fd565b90508281526020810184848401111561128757611286611198565b5b611292848285611249565b509392505050565b600082601f8301126112af576112ae611193565b5b81356112bf848260208601611258565b91505092915050565b6112d181610f0e565b81146112dc57600080fd5b50565b6000813590506112ee816112c8565b92915050565b600080600080600060a086880312156113105761130f611189565b5b600086013567ffffffffffffffff81111561132e5761132d61118e565b5b61133a8882890161129a565b955050602086013567ffffffffffffffff81111561135b5761135a61118e565b5b6113678882890161129a565b945050604086013567ffffffffffffffff8111156113885761138761118e565b5b6113948882890161129a565b935050606086013567ffffffffffffffff8111156113b5576113b461118e565b5b6113c18882890161129a565b92505060806113d2888289016112df565b9150509295509295909350565b6000602082840312156113f5576113f4611189565b5b600082013567ffffffffffffffff8111156114135761141261118e565b5b61141f8482850161129a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061145382611428565b9050919050565b61146381611448565b82525050565b600060208201905061147e600083018461145a565b92915050565b600081519050611493816112c8565b92915050565b6000602082840312156114af576114ae611189565b5b60006114bd84828501611484565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061150d57607f821691505b60208210811415611521576115206114c6565b5b50919050565b600081905092915050565b600061153d82610f6e565b6115478185611527565b9350611557818560208601610f8a565b80840191505092915050565b600061156f8284611532565b915081905092915050565b600082825260208201905092915050565b7f4761746577617920616c72656164792072656769737465726564210000000000600082015250565b60006115c1601b8361157a565b91506115cc8261158b565b602082019050919050565b600060208201905081810360008301526115f0816115b4565b9050919050565b600060408201905061160c600083018561145a565b6116196020830184610f18565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b6000815461167c816114f5565b611686818661164f565b945060018216600081146116a157600181146116b2576116e5565b60ff198316865281860193506116e5565b6116bb8561165a565b60005b838110156116dd578154818901526001820191506020810190506116be565b838801955050505b50505092915050565b60006116fa828461166f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061173f82610f0e565b915061174a83610f0e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561177f5761177e611705565b5b828201905092915050565b600061179582610f0e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117c8576117c7611705565b5b600182019050919050565b7f47617465776179206e6f7420666f756e64210000000000000000000000000000600082015250565b600061180960128361157a565b9150611814826117d3565b602082019050919050565b60006020820190508181036000830152611838816117fc565b905091905056fea26469706673582212204be0ad55ca9fc03e7993424e4810a9f79798cb3593cc62b98060f0f75131d20164736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 732,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(LeafiumToken)1065"
      },
      {
        "astId": 738,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "userToGateways",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_struct(Gateway)729_storage)dyn_storage)"
      },
      {
        "astId": 742,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "gatewayExists",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 746,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "gateways",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Gateway)729_storage)dyn_storage"
      },
      {
        "astId": 754,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "reward",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 762,
        "contract": "contracts/Leafium.sol:Leafium",
        "label": "awakeReward",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Gateway)729_storage)dyn_storage": {
        "base": "t_struct(Gateway)729_storage",
        "encoding": "dynamic_array",
        "label": "struct Leafium.Gateway[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(LeafiumToken)1065": {
        "encoding": "inplace",
        "label": "contract LeafiumToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(Gateway)729_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Leafium.Gateway[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Gateway)729_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Gateway)729_storage": {
        "encoding": "inplace",
        "label": "struct Leafium.Gateway",
        "members": [
          {
            "astId": 716,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 718,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 720,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "lat",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 722,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "long",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 724,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "altitude",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 726,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "earnings",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 728,
            "contract": "contracts/Leafium.sol:Leafium",
            "label": "updatedAt",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}