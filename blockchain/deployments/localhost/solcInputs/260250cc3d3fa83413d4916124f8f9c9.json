{
  "language": "Solidity",
  "sources": {
    "contracts/Leafium.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract Leafium {\n    // event GatewayAdded()\n\n    struct Gateway {\n        string id;\n        string name;\n        string lat;\n        string long;\n        uint256 altitude;\n    }\n\n    mapping(address => Gateway[]) private userToGateways;\n    Gateway[] private gateways;\n\n    constructor() {}\n\n    function addGateway(\n        string memory gatewayId,\n        string memory gatewayName,\n        string memory lat,\n        string memory long,\n        uint256 altitude\n    ) public {\n        Gateway memory newGateway = Gateway(\n            gatewayId,\n            gatewayName,\n            lat,\n            long,\n            altitude\n        );\n        gateways.push(newGateway);\n        userToGateways[msg.sender].push(newGateway);\n    }\n\n    function getMyGateways() public view returns (Gateway[] memory) {\n        return userToGateways[msg.sender];\n    }\n\n    function getGateways() public view returns (Gateway[] memory){\n        return gateways;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}