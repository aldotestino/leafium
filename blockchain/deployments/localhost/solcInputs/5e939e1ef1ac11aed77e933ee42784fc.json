{
  "language": "Solidity",
  "sources": {
    "contracts/Leafium.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ncontract Leafium {\r\n    // event GatewayAdded()\r\n\r\n    struct Gateway {\r\n        string id;\r\n        string name;\r\n        string lat;\r\n        string long;\r\n        uint256 altitude;\r\n    }\r\n\r\n    mapping(address => Gateway[]) private userToGateways;\r\n    Gateway[] private gateways;\r\n\r\n    constructor() {}\r\n\r\n    function addGateway(\r\n        string memory gatewayId,\r\n        string memory gatewayName,\r\n        string memory lat,\r\n        string memory long,\r\n        uint256 altitude\r\n    ) public {\r\n        Gateway memory newGateway = Gateway(\r\n            gatewayId,\r\n            gatewayName,\r\n            lat,\r\n            long,\r\n            altitude\r\n        );\r\n        gateways.push(newGateway);\r\n        userToGateways[msg.sender].push(newGateway);\r\n    }\r\n\r\n    function getMyGateways() public view returns (Gateway[] memory) {\r\n        return userToGateways[msg.sender];\r\n    }\r\n\r\n    function getGateways() public view returns (Gateway[] memory){\r\n        return gateways;\r\n    }\r\n}\r\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}